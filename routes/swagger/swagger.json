{
  "swagger": "2.0",
  "info": {
    "description": "This is an online wallet server. Below you can find a detailed documentation regarding all possible requests that our online wallet server can handle. Have fun!  <br /> <br /> <i>P.S. In order to see what fields are required in the request body and their types - click on the <i><strong>Model</strong></i> button next to the <i><strong>Example Value</strong></i>.</i>",
    "version": "1.0.0",
    "title": "eWallet",
    "contact": {
      "email": "tisha.kruglyak@gmail.com"
    }
  },
  "host": "wallet-codewriters.herokuapp.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Operations about authorization"
    },
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "wallet",
      "description": "Access to eWallet and money operations"
    }
  ],
  "paths": {
    "/api/users/current": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get information about current user",
        "description": "This returns info regarding the currently logged-in user. <strong>Requires bearer token.</strong>",
        "operationId": "getUserInfo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operation successful user info",
            "schema": {
              "$ref": "#/definitions/userInfoSuccess"
            }
          },
          "401": {
            "$ref": "#/definitions/unauthorized"
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Send verification email again.",
        "description": "This sends a verification email one more time.",
        "operationId": "sendVerificationEmailAgain",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "avisalom.peremychniy@mail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful. Email sent",
            "schema": {
              "$ref": "#/definitions/emailResendSuccess"
            }
          },
          "400": {
            "description": "Invalid credentials supplied",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Registers new user.",
        "description": "This creates a new user.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/registerSuccess"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs user into the system.",
        "description": "This logs user in.",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation login",
            "schema": {
              "$ref": "#/definitions/loginSuccess"
            }
          },
          "400": {
            "description": "Invalid request supplied"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Logs out current logged in user session. ",
        "description": "This logs user out. <strong>Requires bearer token.</strong>",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "401": {
            "$ref": "#/definitions/unauthorized"
          }
        }
      }
    },
    "/wallet/transaction": {
      "post": {
        "tags": [
          "wallet"
        ],
        "summary": "Creates a transaction.",
        "description": "This creates a transaction. <strong>Requires bearer token.</strong>",
        "operationId": "createTransaction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/transactionSuccess"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "$ref": "#/definitions/unauthorized"
          }
        }
      }
    },
    "/wallet/transaction/{transactionId}": {
      "delete": {
        "tags": [
          "wallet"
        ],
        "summary": "Deletes a transaction.",
        "description": "This deletes a transaction. <strong>Requires bearer token.</strong>",
        "operationId": "deleteTransaction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "type": "string",
            "required": true,
            "description": "The ID of the transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/transactionDeleteSuccess"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "$ref": "#/definitions/unauthorized"
          }
        }
      }
    },
    "/wallet/transaction/categories": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Request transaction categories.",
        "description": "This returns all transactions categories for a given user. <strong>Requires bearer token.</strong>",
        "operationId": "getTransactionsCategories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/categoriesSuccess"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "$ref": "#/definitions/unauthorized"
          }
        }
      }
    },
    "/wallet/transactions": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Request all users transactions.",
        "description": "This returns all transactions for a given user. <strong>Requires bearer token.</strong>",
        "operationId": "getTransactions",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/transactionsSuccess"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "$ref": "#/definitions/unauthorized"
          }
        }
      }
    },
    "/wallet/stats": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Request all users transactions statistics.",
        "description": "This returns all transactions statistics for a given user. <strong>Requires bearer token.</strong>",
        "operationId": "getTransactionsStats",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "type": "number",
            "required": true,
            "description": "The month's number from 1 to 12."
          },
          {
            "in": "query",
            "name": "year",
            "type": "number",
            "required": true,
            "description": "The year's numeric value."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/transactionsStatsSuccess"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "$ref": "#/definitions/unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Avisalom Peremychniy"
        },
        "email": {
          "type": "string",
          "example": "avisalom.peremychniy@mail.com"
        },
        "password": {
          "type": "string",
          "example": "1234567"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "emailResendSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": "200"
        },
        "data": {
          "type": "object",
          "properties": {
            "isVerifyEmailSent": {
              "type": "boolean",
              "example": "true"
            }
          }
        }
      }
    },
    "registerSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": "201"
        },
        "payload": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Avisalom Peremychniy"
                },
                "email": {
                  "type": "string",
                  "example": "avisalom.peremychniy@mail.com"
                }
              }
            },
            "isVerifyEmailSent": {
              "type": "boolean",
              "example": "true"
            }
          }
        }
      }
    },
    "badRequest": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "unauthorized": {
      "description": "Unauthorized or invalid token"
    },
    "transactionSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": "201"
        },
        "payload": {
          "type": "object",
          "properties": {
            "newTransaction": {
              "$ref": "#/definitions/transactionResponse"
            }
          }
        }
      }
    },
    "transactionDeleteSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": "200"
        },
        "payload": {
          "type": "object",
          "properties": {
            "deletedTransaction": {
              "$ref": "#/definitions/transactionResponse"
            }
          }
        }
      }
    },
    "transactionsSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": 200
        },
        "payload": {
          "type": "object",
          "properties": {
            "transactions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/transactionResponse"
              },
              "example": [
                {
                  "typeTransaction": true,
                  "sum": 2598,
                  "date": "15.05.2022",
                  "description": "groceries",
                  "category": "other",
                  "owner": "21e7ab08-a674-4abf-8511-b811aee7a3f4",
                  "_id": "e9f644a6-81f1-48ad-819d-2dc5bfdecb99",
                  "createdAt": "2022-05-16T10:34:53.652Z",
                  "updatedAt": "2022-05-16T10:34:53.652Z"
                },
                {
                  "typeTransaction": false,
                  "sum": 1649,
                  "date": "14.05.2022",
                  "description": "Bought a brand new iphone XXL plus pro max edge",
                  "category": "squander",
                  "owner": "21e7ab08-a674-4abf-8511-b811aee7a3f4",
                  "_id": "e9f644f7-81f1-48ad-819d-2dc5bfdecb98",
                  "createdAt": "2022-05-14T11:37:53.652Z",
                  "updatedAt": "2022-05-14T11:37:53.652Z"
                }
              ]
            }
          }
        }
      }
    },
    "transactionResponse": {
      "type": "object",
      "properties": {
        "typeTransaction": {
          "type": "boolean"
        },
        "sum": {
          "type": "number",
          "example": 2598
        },
        "date": {
          "type": "string",
          "example": "15.05.2022"
        },
        "description": {
          "type": "string",
          "example": "groceries"
        },
        "category": {
          "type": "string",
          "example": "other"
        },
        "owner": {
          "type": "string",
          "example": "21e7ab08-a674-4abf-8511-b811aee7a3f4"
        },
        "_id": {
          "type": "string",
          "example": "e9f644a6-81f1-48ad-819d-2dc5bfdecb99"
        },
        "createdAt": {
          "type": "string",
          "example": "2022-05-16T10:34:53.652Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-05-16T10:34:53.652Z"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "avisalom.peremychniy@mail.com"
        },
        "password": {
          "type": "string",
          "example": "1234567"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "loginSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": 200
        },
        "payload": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
            },
            "user": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Avisalom Peremychniy"
                },
                "email": {
                  "type": "string",
                  "example": "avisalom.peremychniy@mail.com"
                }
              }
            }
          }
        }
      }
    },
    "userInfoSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": 200
        },
        "payload": {
          "type": "object",
          "properties": {
            "userInfo": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Avisalom Peremychniy"
                },
                "email": {
                  "type": "string",
                  "example": "avisalom.peremychniy@mail.com"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          }
        }
      }
    },
    "transactionsStatsSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "string",
          "example": "200"
        },
        "payload": {
          "type": "object",
          "properties": {
            "sortingTransactions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sum": {
                    "type": "number"
                  },
                  "color": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "name": "Goods",
                    "sum": 15000,
                    "color": "#L309H1"
                  },
                  {
                    "name": "Other expenses",
                    "sum": 100,
                    "color": "#1209E2"
                  },
                  {
                    "name": "Education",
                    "sum": 25980,
                    "color": "#K709F1"
                  }
                ]
              }
            },
            "balance": {
              "type": "object",
              "properties": {
                "income": {
                  "type": "number",
                  "example": 28945
                },
                "consumption": {
                  "type": "number",
                  "example": 12564
                },
                "balance": {
                  "type": "number",
                  "example": 16381
                }
              }
            }
          }
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "typeTransaction": {
          "type": "boolean"
        },
        "sum": {
          "type": "number"
        },
        "category": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "typeTransaction",
        "sum",
        "date"
      ]
    },
    "categoriesSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "code": {
          "type": "number",
          "example": "200"
        },
        "data": {
          "type": "object",
          "properties": {
            "categories": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "example": [
                {
                  "color": "#K709F1",
                  "name": "Education"
                },
                {
                  "color": "#L309H1",
                  "name": "Goods"
                },
                {
                  "color": "#L309H1",
                  "name": "Other expenses"
                }
              ]
            }
          }
        }
      }
    }
  }
}